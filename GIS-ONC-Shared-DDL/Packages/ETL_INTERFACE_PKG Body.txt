create or replace 
PACKAGE BODY ETL_INTERFACE_PKG
IS
  
FUNCTION REF_INT_DELETE 
(
    I_INTERFACE_NM VARCHAR2,
    I_TABLE_NM VARCHAR2
)
RETURN VARCHAR2 IS
    PRAGMA AUTONOMOUS_TRANSACTION;
    O_STATUS VARCHAR2(10);
    V_CODE NUMBER;
    V_ERRM VARCHAR2(1000);
    V_SQL VARCHAR2(4000);
    V_MSG VARCHAR2(1000);
BEGIN

--This query will perform deletes in table groups for a specified interface
V_SQL := 'DELETE FROM ' ||I_TABLE_NM||' WHERE ID IN (SELECT TABLE_ID FROM INTERFACE_DELETES WHERE DELETED_FLAG = ''N'' AND INTERFACE_NM   = ''' ||I_INTERFACE_NM||''' AND TABLE_NM = ''' ||I_TABLE_NM ||''')';

DBMS_OUTPUT.PUT_LINE(V_SQL);

EXECUTE IMMEDIATE V_SQL;
COMMIT;

V_MSG := GIS_ONC.ETL_INTERFACE_PKG.REF_INT_UPDATE_FLAG(I_INTERFACE_NM, I_TABLE_NM );

/*O_STATUS := 'SUCCESS';*/

RETURN V_MSG;

EXCEPTION
		
		WHEN VALUE_ERROR THEN
			V_CODE := SQLCODE;
			V_ERRM := SUBSTR(SQLERRM ,1 ,100);
      O_STATUS := 'FAIL ERROR';
			DBMS_OUTPUT.PUT_LINE ('' || SYSTIMESTAMP || ' Error code ' || V_CODE || ': ' || V_ERRM);
      RETURN V_ERRM;
		
		WHEN OTHERS THEN
			V_CODE := SQLCODE;
			V_ERRM := SUBSTR(SQLERRM ,1 ,100);
			O_STATUS := 'FAIL OTHERS';
      DBMS_OUTPUT.PUT_LINE ('' || SYSTIMESTAMP || ' Error code ' || V_CODE || ': ' || V_ERRM);
      RETURN V_ERRM;

END REF_INT_DELETE;

FUNCTION REF_INT_UPDATE_FLAG
(
    I_INTERFACE_NM VARCHAR2,
    I_TABLE_NM VARCHAR2
)
RETURN VARCHAR2 IS
    PRAGMA AUTONOMOUS_TRANSACTION;
    O_STATUS VARCHAR2(10);
    V_CODE NUMBER;
    V_ERRM VARCHAR2(1000);
    V_SQL VARCHAR2(4000);
BEGIN

--This query will perform deletes in table groups for a specified interface
V_SQL := 'UPDATE INTERFACE_DELETES SET DELETED_FLAG = ''Y'' WHERE DELETED_FLAG = ''N'' AND INTERFACE_NM = '''||I_INTERFACE_NM||''' AND TABLE_NM = '''||I_TABLE_NM||''' AND TABLE_ID NOT IN (SELECT ID FROM '||I_TABLE_NM||' )';

DBMS_OUTPUT.PUT_LINE(V_SQL);

EXECUTE IMMEDIATE V_SQL;

COMMIT;

O_STATUS := 'SUCCESS'
;

RETURN O_STATUS;

EXCEPTION
		
		WHEN VALUE_ERROR THEN
			V_CODE := SQLCODE;
			V_ERRM := SUBSTR(SQLERRM ,1 ,100);
      O_STATUS := 'FAIL ERROR';
			DBMS_OUTPUT.PUT_LINE ('' || SYSTIMESTAMP || ' Error code ' || V_CODE || ': ' || V_ERRM);
      RETURN V_ERRM;
		
		WHEN OTHERS THEN
			V_CODE := SQLCODE;
			V_ERRM := SUBSTR(SQLERRM ,1 ,100);
			O_STATUS := 'FAIL OTHERS';
      DBMS_OUTPUT.PUT_LINE ('' || SYSTIMESTAMP || ' Error code ' || V_CODE || ': ' || V_ERRM);
      RETURN V_ERRM;

END REF_INT_UPDATE_FLAG;
     
END ETL_INTERFACE_PKG    
    ;
/