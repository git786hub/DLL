
set echo on
set linesize 1000
set pagesize 300
set trimspool on
set define off

whenever sqlerror exit -1
whenever oserror exit -1

spool c:\temp\AddSecondaryCalculatorCommandSupportTables.log

--**************************************************************************************

--SCRIPT NAME: AddSecondaryCalculatorCommandSupportTables.sql
--**************************************************************************************
-- AUTHOR		        : INGRNET\RPGABRYS
-- Date 	      	    : 31-JUL-2017
-- Jira NUMBER	  	    :
-- PRODUCT VERSION  	: 10.2.04
-- PRJ IDENTIFIER   	: G/TECHNOLOGY - ONCOR
-- PROGRAM DESC     	: Add tables to support the Secondary Calculator custom command.
-- SOURCE DATABASE  	:
--**************************************************************************************
-- Script Body
--************************************************************************************** 

CREATE TABLE TOOLS_SC_CABLE (
CINO				NUMBER GENERATED ALWAYS AS IDENTITY,
CU					VARCHAR2 (30),
DESCRIPTION			VARCHAR2 (80),
DC_INCHES			NUMBER,
OD_INCHES			NUMBER,
RDC25				NUMBER,
GMRF				NUMBER,
TC					NUMBER,
AMPACITY			NUMBER,
TCMIN				NUMBER,
TZERO				NUMBER,
RDC					NUMBER,
RACT				NUMBER,
X					NUMBER,
RESISTANCE_PER_FT	NUMBER,
REACTANCE_PER_FT	NUMBER,
EDIT_DATE_DT		DATE
);
/

ALTER TABLE TOOLS_SC_CABLE ADD CONSTRAINT M_P_TOOLS_SC_CABLE PRIMARY KEY (CINO);

CREATE OR REPLACE PUBLIC SYNONYM TOOLS_SC_CABLE FOR TOOLS_SC_CABLE;

CREATE TRIGGER T_BIUR_TOOLS_SC_CABLE_EDATE
BEFORE INSERT OR UPDATE ON TOOLS_SC_CABLE
FOR EACH ROW
BEGIN

  :NEW.EDIT_DATE_DT := SYSDATE;
END;
/


CREATE TABLE TOOLS_SC_DERATING (
DINO				NUMBER GENERATED ALWAYS AS IDENTITY,
NUMBER_OF_CABLES	NUMBER,
XFMR_TYPE			VARCHAR2 (2),
DERATING_VALUE		NUMBER,
EDIT_DATE_DT		DATE
);
/

ALTER TABLE TOOLS_SC_DERATING ADD CONSTRAINT M_P_TOOLS_SC_DERATING PRIMARY KEY (DINO);

CREATE OR REPLACE PUBLIC SYNONYM TOOLS_SC_DERATING FOR TOOLS_SC_DERATING;

CREATE TRIGGER T_BIUR_TOOLS_SC_DERATING_EDATE
BEFORE INSERT OR UPDATE ON TOOLS_SC_DERATING
FOR EACH ROW
BEGIN

  :NEW.EDIT_DATE_DT := SYSDATE;
END;
/


CREATE TABLE TOOLS_SC_METER (
MINO				NUMBER GENERATED ALWAYS AS IDENTITY,
TONNAGE				NUMBER,
LRA					NUMBER,
EDIT_DATE_DT		DATE
);
/

ALTER TABLE TOOLS_SC_METER ADD CONSTRAINT M_P_TOOLS_SC_METER PRIMARY KEY (MINO);

CREATE OR REPLACE PUBLIC SYNONYM TOOLS_SC_METER FOR TOOLS_SC_METER;

CREATE TRIGGER T_BIUR_TOOLS_SC_METER_EDATE
BEFORE INSERT OR UPDATE ON TOOLS_SC_METER
FOR EACH ROW
BEGIN

  :NEW.EDIT_DATE_DT := SYSDATE;
END;
/


CREATE TABLE TOOLS_SC_TRANSFORMER (
TINO			NUMBER GENERATED ALWAYS AS IDENTITY,
CU				VARCHAR2 (30),
DESCRIPTION		VARCHAR2 (80),
XFMR_SIZE		NUMBER,
TYPE			VARCHAR2 (10),
VOLTAGE			VARCHAR2 (15),
OH_UG			VARCHAR2 (2),
TYPE_FACTOR		NUMBER,
IMPEDANCE		NUMBER,
RESISTANCE		NUMBER,
REACTANCE		NUMBER,
EDIT_DATE_DT	DATE
);
/

ALTER TABLE TOOLS_SC_TRANSFORMER ADD CONSTRAINT M_P_TOOLS_SC_TRANSFORMER PRIMARY KEY (TINO);

CREATE OR REPLACE PUBLIC SYNONYM TOOLS_SC_TRANSFORMER FOR TOOLS_SC_TRANSFORMER;

CREATE TRIGGER T_BIUR_TOOLS_SC_TRNSFRMR_EDATE
BEFORE INSERT OR UPDATE ON TOOLS_SC_TRANSFORMER
FOR EACH ROW
BEGIN

  :NEW.EDIT_DATE_DT := SYSDATE;
END;
/


CREATE TABLE TOOLS_SC_TRANSFORMER_VOLTAGE (
TINO				NUMBER GENERATED ALWAYS AS IDENTITY,
VOLTAGE				VARCHAR2 (15),
VOLTAGE_SECONDARY	NUMBER,
VOLTAGE_FACTOR		NUMBER,
VOLTAGE_3PH			NUMBER,
EDIT_DATE_DT	DATE
);
/

ALTER TABLE TOOLS_SC_TRANSFORMER_VOLTAGE ADD CONSTRAINT M_P_TOOLS_SC_TRNSFRMR_VOLTAGE PRIMARY KEY (TINO);

CREATE OR REPLACE PUBLIC SYNONYM TOOLS_SC_TRANSFORMER_VOLTAGE FOR TOOLS_SC_TRANSFORMER_VOLTAGE;

CREATE TRIGGER T_BIUR_TOOLS_SC_XFMR_VLT_EDATE
BEFORE INSERT OR UPDATE ON TOOLS_SC_TRANSFORMER_VOLTAGE
FOR EACH ROW
BEGIN

  :NEW.EDIT_DATE_DT := SYSDATE;
END;
/


--**************************************************************************************
-- End Script Body
--**************************************************************************************